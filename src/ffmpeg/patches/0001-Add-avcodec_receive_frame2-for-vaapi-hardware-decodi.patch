From 3563bed5fbaa0e9332b805404f52a08a37508d72 Mon Sep 17 00:00:00 2001
From: Hai Lan <hai.lan@intel.com>
Date: Mon, 19 Aug 2019 14:49:25 +0800
Subject: [PATCH] Add avcodec_receive_frame2 for vaapi hardware decoding

Signed-off-by: Hai Lan <hai.lan@intel.com>
---
 libavcodec/avcodec.h |  3 +++
 libavcodec/decode.c  | 39 +++++++++++++++++++++++++++++++++++++++
 2 files changed, 42 insertions(+)

diff --git a/libavcodec/avcodec.h b/libavcodec/avcodec.h
index bee2234..e13d2cd 100644
--- a/libavcodec/avcodec.h
+++ b/libavcodec/avcodec.h
@@ -4875,6 +4875,9 @@ int avcodec_send_packet(AVCodecContext *avctx, const AVPacket *avpkt);
  */
 int avcodec_receive_frame(AVCodecContext *avctx, AVFrame *frame);
 
+#include <va/va.h>
+int avcodec_receive_frame2(AVCodecContext *avctx, AVFrame *frame, VADisplay *display);
+
 /**
  * Supply a raw video or audio frame to the encoder. Use avcodec_receive_packet()
  * to retrieve buffered output packets.
diff --git a/libavcodec/decode.c b/libavcodec/decode.c
index 160d42d..63fda0b 100644
--- a/libavcodec/decode.c
+++ b/libavcodec/decode.c
@@ -768,6 +768,45 @@ int attribute_align_arg avcodec_receive_frame(AVCodecContext *avctx, AVFrame *fr
     return 0;
 }
 
+#include <va/va.h>
+#include "vaapi_decode.h"
+
+int attribute_align_arg avcodec_receive_frame2(AVCodecContext *avctx, AVFrame *frame, VADisplay *display)
+{
+    AVCodecInternal *avci = avctx->internal;
+    int ret;
+
+    av_frame_unref(frame);
+
+    if (!avcodec_is_open(avctx) || !av_codec_is_decoder(avctx->codec))
+        return AVERROR(EINVAL);
+
+    if (avci->buffer_frame->buf[0]) {
+        av_frame_move_ref(frame, avci->buffer_frame);
+    } else {
+        ret = decode_receive_frame_internal(avctx, frame);
+        if (ret < 0)
+            return ret;
+    }
+
+    if (avctx->codec_type == AVMEDIA_TYPE_VIDEO) {
+        ret = apply_cropping(avctx, frame);
+        if (ret < 0) {
+            av_frame_unref(frame);
+            return ret;
+        }
+    }
+
+    avctx->frame_number++;
+
+    VAAPIDecodeContext *ctx = avctx->internal->hwaccel_priv_data;
+    //VADISPLAY *display = ctx->hwctx->display;
+    if(ctx->hwctx)
+        *display = ctx->hwctx->display;
+
+    return 0;
+}
+
 static int compat_decode(AVCodecContext *avctx, AVFrame *frame,
                          int *got_frame, const AVPacket *pkt)
 {
-- 
1.8.3.1

